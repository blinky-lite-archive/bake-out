[{"id":"2fb21a6b.366766","type":"tab","label":"blinky-lite-demo","disabled":false,"info":""},{"id":"bd9a93d5.70311","type":"tab","label":"AppIndex","disabled":false,"info":""},{"id":"e8763d21.b7461","type":"subflow","name":"HTML","info":"","category":"","in":[{"x":40,"y":40,"wires":[{"id":"91e3585b.224158"}]}],"out":[]},{"id":"6ad7c930.1a06b8","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#000000","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Oscillation Overthruster Display","hideToolbar":"false","allowSwipe":"false","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"d3e0696e.a4f1c8","type":"mqtt-broker","z":"","name":"blinky-lite-controlbox","broker":"$(MQTTSERVERIP)","port":"1883","clientid":"$(MQTTCLIENTID)","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"c309d5c4.23e2d8","type":"mongodb","z":"","hostname":"$(MONGODBIP)","port":"27017","db":"blinky-lite","name":"mongodb"},{"id":"b0ed4f9c.d11b9","type":"websocket-listener","z":"","path":"/blinky-lite-demo-2/websocket","wholemsg":"false"},{"id":"f162f8da.5ea6d8","type":"websocket-listener","z":"","path":"/blinky-lite-demo-1/websocket","wholemsg":"false"},{"id":"7003ff07.099c4","type":"http in","z":"2fb21a6b.366766","name":"HTTP GET","url":"/blinky-lite-demo-2","method":"get","upload":false,"swaggerDoc":"","x":80,"y":100,"wires":[["ef042835.9e2488"]]},{"id":"dfcdea8e.1b6118","type":"template","z":"2fb21a6b.366766","name":"Body","field":"payload.body","fieldType":"msg","format":"html","syntax":"mustache","template":"    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-7' align='center'>\n{{{payload.html.dashboard}}}\n            </div>\n            <div class='col-md-5' align='center'>\n{{{payload.html.control}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 25px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n    </div>","output":"str","x":690,"y":300,"wires":[["de97baba.d0c818"]]},{"id":"a6b964dd.6199b8","type":"websocket out","z":"2fb21a6b.366766","name":"Socket Out","server":"b0ed4f9c.d11b9","client":"","x":530,"y":880,"wires":[]},{"id":"88320d38.511a3","type":"mongodb in","z":"2fb21a6b.366766","mongodb":"c309d5c4.23e2d8","name":"Find in device db","collection":"devices","operation":"find","x":510,"y":720,"wires":[["2a560f13.9caae"]]},{"id":"2a560f13.9caae","type":"function","z":"2fb21a6b.366766","name":"Parse Readings","func":"if ( (msg.topic == 'greenReadings') || (msg.topic == 'redReadings') )\n{\n    var readings = \n    {\n        \"photoDetValue\"         : {},\n        \"ultraDistance\"         : {},\n        \"tempAvg\"               : {},\n        \"ledState\"              : {},\n        \"ledValue\"              : {},\n        \"ledPeriod\"             : {},\n        \"ultraAlarmDistance\"    : {}\n    };\n    var deviceAttr =\n    {\n        \"photoDetValue\"         : {'device':'photoDet', 'attr':'value'},\n        \"ultraDistance\"         : {'device':'ultraDistance', 'attr':'value'},\n        \"tempAvg\"               : {'device':'temperature', 'attr':'average'},\n        \"ledState\"              : {'device':'led', 'attr':'state'},\n        \"ledValue\"              : {'device':'led', 'attr':'value'},\n        \"ledPeriod\"             : {'device':'led', 'attr':'period'},\n        \"ultraAlarmDistance\"    : {'device':'ultraDistance', 'attr':'alarm'}\n    };\n\n    for (var key in readings)\n    {\n        var icount = 0;\n        while (icount < msg.payload.length)\n        {\n            if ( (msg.payload[icount].device == deviceAttr[key].device) \n                && (msg.payload[icount].attr == deviceAttr[key].attr) )\n            {\n                readings[key] = msg.payload[icount]\n                icount = msg.payload.length;\n            }\n            ++icount;\n        }\n    }\n    return {topic:msg.topic, payload:{topic:'readings', payload:readings}};    \n}\nreturn null;\n","outputs":1,"noerr":0,"x":200,"y":840,"wires":[["62b0a56b.762d0c"]]},{"id":"1eaec386.468dfc","type":"status","z":"2fb21a6b.366766","name":"Socket Status","scope":["a6b964dd.6199b8","8bf91f6f.6883b"],"x":110,"y":660,"wires":[["303b8e57.c8e5a2"]]},{"id":"303b8e57.c8e5a2","type":"function","z":"2fb21a6b.366766","name":"Check Socket Status","func":"var newMsg = null;\nif (msg.status.text.indexOf(\"connected \") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'connected'};\n}\nif (msg.status.text.indexOf(\"common.status.disconnected\") >= 0)\n{\n    newMsg = {topic:'socketStatus', payload:'disconnected'};\n}\nreturn newMsg;","outputs":1,"noerr":0,"x":300,"y":660,"wires":[["e386f4a8.856f58"]]},{"id":"e386f4a8.856f58","type":"function","z":"2fb21a6b.366766","name":"Allow Database poll","func":"if (msg.topic == 'socketStatus')\n{\n    context.set('socketStatus', msg.payload);\n    return null;\n}\nif (msg.topic == 'pollDatabase')\n{\n    var socketStatus = context.get('socketStatus');\n    if (socketStatus == undefined) return null;\n    if (socketStatus == 'connected') return {topic:'databasePoll', payload:true};\n}\nreturn null;","outputs":1,"noerr":0,"x":510,"y":660,"wires":[["b2f4ba54.265dc8"]]},{"id":"c991762f.8d1b58","type":"inject","z":"2fb21a6b.366766","name":"","topic":"pollDatabase","payload":"","payloadType":"date","repeat":"1","crontab":"","once":true,"onceDelay":0.1,"x":310,"y":600,"wires":[["e386f4a8.856f58"]]},{"id":"62a046c2.da0268","type":"websocket in","z":"2fb21a6b.366766","name":"","server":"b0ed4f9c.d11b9","client":"","x":180,"y":1060,"wires":[["70f99f78.b53f2"]]},{"id":"70f99f78.b53f2","type":"json","z":"2fb21a6b.366766","name":"","property":"payload","action":"","pretty":false,"x":390,"y":1040,"wires":[["e6c586aa.d893a8"]]},{"id":"ec924cd2.5c764","type":"mqtt out","z":"2fb21a6b.366766","name":"","topic":"","qos":"0","retain":"false","broker":"d3e0696e.a4f1c8","x":810,"y":1020,"wires":[]},{"id":"56892c9e.9db594","type":"function","z":"2fb21a6b.366766","name":"Parse msg","func":"return {topic:msg.payload.mqttMessage.topic, payload:msg.payload.mqttMessage.payload};","outputs":1,"noerr":0,"x":670,"y":1020,"wires":[["ec924cd2.5c764"]]},{"id":"43ac8ec.9bf207","type":"template","z":"e8763d21.b7461","name":"HTML","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>","output":"str","x":790,"y":40,"wires":[["233dd1ed.d17ede"]]},{"id":"99432fa.98673d","type":"template","z":"e8763d21.b7461","name":"Foot","field":"payload.foot","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Foot -->\n    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>","output":"str","x":670,"y":40,"wires":[["43ac8ec.9bf207"]]},{"id":"4ac3208f.90f57","type":"template","z":"e8763d21.b7461","name":"Head","field":"payload.head","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Head -->\n    <meta charset=\"UTF-8\"/>\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>","output":"str","x":550,"y":40,"wires":[["99432fa.98673d"]]},{"id":"9f84c5ba.086818","type":"template","z":"e8763d21.b7461","name":"navBar","field":"payload.navBar","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <div class=\"row\">\n            <div class=\"col-md-2\" style=\"text-align: left\"></div>\n            <div class=\"col-md-8\" style=\"text-align: center\">\n                <h1 class=\"display-5 jumbotron-title\">{{{payload.title}}}</h1>\n            </div>\n            <div class=\"col-md-2\" style=\"text-align: right\"><a href='https://www.blinky-lite.io/' target='_blank'><img src=\"/img/BlinkyLogo.gif\" height=\"50px\"/></a></div>\n        </div>\n    </div>","output":"str","x":420,"y":40,"wires":[["4ac3208f.90f57"]]},{"id":"233dd1ed.d17ede","type":"http response","z":"e8763d21.b7461","name":"","statusCode":"","headers":{},"x":910,"y":40,"wires":[]},{"id":"91e3585b.224158","type":"template","z":"e8763d21.b7461","name":"CSS","field":"payload.css","fieldType":"msg","format":"css","syntax":"mustache","template":"        :root \n        {\n          --container-background-color: #557a95;\n          --container-title-color: #fdc300;\n          --container-text-color: #ffffff;\n          --background-color: #7395ae;\n          --sub-container-background-color: #c6c2bb;\n          --sub-container-title-color: #016a71;\n          --sub-container-text-color: #000000;\n        }\n        body \n        {\n          background-color: var(--background-color);\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        .jumbotron \n        {\n          background-color: var(--container-background-color) !important;\n          color:var(--container-text-color);\n          padding-bottom: 10px;\n          padding-top: 10px;\n        }\n        .jumbotron-title\n        {\n          color:var(--container-title-color);\n        }\n        .jumbotron-button\n        {\n          color: var(--background-color);\n          background-color: var(--container-title-color);\n          font-weight: 900;\n        }\n        .card\n        {\n          background-color: var(--container-background-color) !important;\n          text-align: center;\n          padding: 10px;\n        }\n        .card-body\n        {\n          background-color: #999999;\n        }\n        .card-button\n        {\n          color: var(--container-title-color);\n          background-color: var(--container-background-color) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--container-title-color);\n          font-weight: bold;\n        }\n        .card-text\n        {\n          color: var(--container-background-color);\n          text-align: left;\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n          font-weight: 900;\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-weight: 900;\n        }\n        .custom-select\n        {\n          color: var(--container-text-color);\n          background-color: var(--background-color);\n        \n        }\n        .form-control\n        {\n          text-align: center;\n        }\n        .checkbox-align\n        {\n          vertical-align: middle;\n          text-align: center;\n        }\n        .csv-linked\n        {\n            color: blue;\n        }\n        .csv-unlinked\n        {\n            color: red;\n        }","output":"str","x":130,"y":40,"wires":[["47ebd6c.9f66a28"]]},{"id":"de97baba.d0c818","type":"subflow:e8763d21.b7461","z":"2fb21a6b.366766","name":"","x":810,"y":300,"wires":[]},{"id":"9a1fbe36.09896","type":"template","z":"2fb21a6b.366766","name":"JavaScript","field":"payload.javascript","fieldType":"msg","format":"javascript","syntax":"mustache","template":"{{{payload.script.stripChartWidget}}}\n{{{payload.script.gaugeWidget}}}\n{{{payload.script.barWidget}}}\n{{{payload.script.changeDatabaseKeyValue}}}\n{{{payload.script.global}}}\n{{{payload.script.docReady}}}\n{{{payload.script.socket}}}\n{{{payload.script.updateReadings}}}\n{{{payload.script.distanceAlarm}}}\n{{{payload.script.setBlinkMode}}}","output":"str","x":250,"y":500,"wires":[["50e0043f.cf2c2c"]]},{"id":"b2f4ba54.265dc8","type":"function","z":"2fb21a6b.366766","name":"Prepare Readings Query","func":"var msg1 = \n{\n    topic           : 'greenReadings',\n    payload         : \n    {\n        sys01   : \"blinky-lite\",\n        sys02   : \"demo\",\n        sys03   : \"breadboard\",\n        sys04   : \"green\",\n        prop    : \"reading\"\n    }\n};\nvar msg2 = \n{\n    topic           : 'redReadings',\n    payload         : \n    {\n        sys01   : \"blinky-lite\",\n        sys02   : \"demo\",\n        sys03   : \"breadboard\",\n        sys04   : \"red\",\n        prop    : \"reading\"\n    }\n};\nreturn [msg1,msg2];\n","outputs":2,"noerr":0,"x":250,"y":720,"wires":[["88320d38.511a3"],["88320d38.511a3"]]},{"id":"47ebd6c.9f66a28","type":"template","z":"e8763d21.b7461","name":"Utility Scripts","field":"payload.utilityScripts","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Utility Scripts\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }","output":"str","x":270,"y":40,"wires":[["9f84c5ba.086818"]]},{"id":"4346720b.c0671c","type":"template","z":"2fb21a6b.366766","name":"GaugeWidget","field":"payload.script.gaugeWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// GaugeWidget\n        function setGaugeWidget(gaugeConfig)\n        {\n            var degrees = 180.0 * (gaugeConfig.hihi - gaugeConfig.value) / (gaugeConfig.hihi - gaugeConfig.lolo);\n            if (degrees < 0.0 )   degrees = 0.0;\n            if (degrees > 180.0 ) degrees = 180.0;\n            // Trig to calc meter point\n            var radius = 0.50;\n            var radians = degrees * Math.PI / 180;\n            var x = radius * Math.cos(radians);\n            var y = radius * Math.sin(radians);\n            var path1 = (degrees < 45 || degrees > 135) ? 'M -0.0 -0.025 L 0.0 0.025 L ' : 'M -0.025 -0.0 L 0.025 0.0 L ';\n            // Path: may have to change to create a better triangle\n            var mainPath = path1,\n                pathX = String(x),\n                space = ' ',\n                pathY = String(y),\n                pathEnd = ' Z';\n            var rotation = (180.0 * (gaugeConfig.high - gaugeConfig.lolo) / (gaugeConfig.hihi - gaugeConfig.lolo)) - 90.0;\n            var path = mainPath.concat(pathX,space,pathY,pathEnd);\n        \n            var valueColor = gaugeConfig.backgroundColor; \n            \n            if ( (gaugeConfig.lolo <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.low) )\n            {\n                valueColor = gaugeConfig.lowColor;\n            }\n            if ( (gaugeConfig.low  <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.high) )\n            {\n                valueColor = gaugeConfig.mediumColor;\n            }\n            if ( (gaugeConfig.high <= gaugeConfig.value) && (gaugeConfig.value < gaugeConfig.hihi) )\n            {\n              valueColor = gaugeConfig.highColor;\n            }\n            if ( gaugeConfig.hihi <= gaugeConfig.value)\n            {\n                valueColor = gaugeConfig.highColor;\n            }\n        \n        \n            var data = \n                [\n                    { \n                        type: 'scatter',\n                        x: [0], y:[0],\n                        marker: {size: 14, color:valueColor},\n                        showlegend: false,\n                        name: gaugeConfig.label,\n                        text: gaugeConfig.value.toString(),\n                        hoverinfo: 'text+name',\n        \n                        \n                    },\n                    { \n                        values: \n                            [\n                                gaugeConfig.hihi - gaugeConfig.high, \n                                gaugeConfig.high - gaugeConfig.low, \n                                gaugeConfig.low  - gaugeConfig.lolo, \n                                gaugeConfig.hihi - gaugeConfig.lolo \n                            ],\n                        rotation: rotation,\n                        text: \n                            [\n                                gaugeConfig.high.toString() + '-' + gaugeConfig.hihi.toString(), \n                                gaugeConfig.low.toString()  + '-' + gaugeConfig.high.toString(), \n                                gaugeConfig.lolo.toString() + '-' + gaugeConfig.low.toString(), \n                                ''\n                            ],\n                        textinfo: 'text',\n                        textposition:'inside',\n                        textfont: {color: gaugeConfig.labelColor},\n                        marker: \n                            {\n                                colors:\n                                    [\n                                        gaugeConfig.highColor,\n                                        gaugeConfig.mediumColor,\n                                        gaugeConfig.lowColor, \n                                        gaugeConfig.backgroundColor\n                                    ]\n                            },\n                        hoverinfo: 'label',\n                        hole: 0.5,\n                        type: 'pie',\n                        showlegend: false,\n                        sort: false\n                    }\n                ];\n            var layout = \n                {\n                    shapes:\n                        [\n                            {\n                                type: 'path',\n                                path: path,\n                                fillcolor: valueColor,\n                                line: {color: valueColor }\n                            }\n                        ],\n                    height: gaugeConfig.size,\n                    width: gaugeConfig.size,\n                    title: \n                        {\n                            text:gaugeConfig.label + ': ' + gaugeConfig.value.toString() + gaugeConfig.unit,\n                            font: {color: valueColor},\n                         },\n                    xaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1],\n                        },\n                    yaxis: \n                        {\n                            zeroline:false, \n                            showticklabels:false,\n                            showgrid: false, \n                            range: [-1, 1]\n                        },\n                    margin: \n                        {\n                            t: 40, //top margin\n                            l: 0, //left margin\n                            r: 0, //right margin\n                            b: 20 //bottom margin\n                        },\n                    plot_bgcolor:gaugeConfig.backgroundColor,\n                    paper_bgcolor:gaugeConfig.backgroundColor\n            \n                };\n            $('#' + gaugeConfig.htmlId).attr('style','max-height: calc(' + (gaugeConfig.size / 2).toString() + 'px + 20px) !important; overflow:hidden;');\n            Plotly.newPlot(gaugeConfig.htmlId, data, layout, {'displayModeBar': false});\n        }","output":"str","x":620,"y":60,"wires":[["b5b6dbf9.b285a8"]]},{"id":"b5b6dbf9.b285a8","type":"template","z":"2fb21a6b.366766","name":"Bar Widget","field":"payload.script.barWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Bar Widget\n        function setBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                x: ['', barConfig.label],\n                y: [ barConfig.low, lowValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n                width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n                width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                x: ['', barConfig.label],\n                y: [barConfig.hihi - barConfig.high, highValue],\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n                width: [0.1, 1.0],\n            };\n            \n            var data = [lowBar, mediumBar, highBar];\n            \n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 40, //top margin\n                            l: 20, //left margin\n                            r: 20, //right margin\n                            b: 20 //bottom margin\n                        },\n                    height: barConfig.height,\n                    width: barConfig.width,\n                    title: \n                        {\n                            text: barConfig.value.toString() + barConfig.unit,\n                            font: {color: valueColor},\n                        },\n                    xaxis: \n                        {\n                            tickfont: {color:valueColor}\n                        },\n                    yaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor}\n                        },\n                };\n            \n            Plotly.newPlot(barConfig.htmlId, data, layout, {'displayModeBar': false});\n        }","output":"str","x":610,"y":100,"wires":[["de4ecc64.b1ea3"]]},{"id":"de4ecc64.b1ea3","type":"template","z":"2fb21a6b.366766","name":"StripChart Widget","field":"payload.script.stripChartWidget","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right'\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace1Title,\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace1Color}\n            \n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: plotConfig.trace2Title,\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'lines',\n                    line: {color: this.plotConfig.trace2Color}\n                };\n            }\n            addTracePoints(trace1Pt, trace2Pt)\n            {\n                var now = (new Date().getTime() - this.plotStartTime) / 1000;\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace2.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.y.push(trace2Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2], this.layout);\n            }\n        }\n","output":"str","x":630,"y":140,"wires":[["eb710b34.7d4128"]]},{"id":"e6c586aa.d893a8","type":"switch","z":"2fb21a6b.366766","name":"","property":"payload.topic","propertyType":"msg","rules":[{"t":"eq","v":"sendSettingToMqtt","vt":"str"},{"t":"eq","v":"changeDataBaseProperty","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":1040,"wires":[["56892c9e.9db594"],["5361342.c590ccc"]]},{"id":"9695929.f17367","type":"mongodb out","z":"2fb21a6b.366766","mongodb":"c309d5c4.23e2d8","name":"","collection":"devices","payonly":false,"upsert":false,"multi":false,"operation":"update","x":970,"y":1080,"wires":[]},{"id":"5361342.c590ccc","type":"function","z":"2fb21a6b.366766","name":"parse Update Database Msg","func":"return msg.payload;","outputs":1,"noerr":0,"x":720,"y":1080,"wires":[["9695929.f17367"]]},{"id":"ef042835.9e2488","type":"template","z":"2fb21a6b.366766","name":"Set Device Leader to 2","field":"payload.script.deviceLeader","fieldType":"msg","format":"javascript","syntax":"mustache","template":"'archiver/blinky-lite/demo/breadboard/red/'","output":"str","x":260,"y":100,"wires":[["75efb570.8678dc"]]},{"id":"62b0a56b.762d0c","type":"switch","z":"2fb21a6b.366766","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"greenReadings","vt":"str"},{"t":"eq","v":"redReadings","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":390,"y":840,"wires":[["8bf91f6f.6883b"],["a6b964dd.6199b8"]]},{"id":"75efb570.8678dc","type":"template","z":"2fb21a6b.366766","name":"Title 2","field":"payload.title","fieldType":"msg","format":"html","syntax":"mustache","template":"Blinky-Lite Demo Red Gizmo","output":"str","x":430,"y":100,"wires":[["4346720b.c0671c"]]},{"id":"f01b631.9746ca","type":"http in","z":"2fb21a6b.366766","name":"HTTP GET","url":"/blinky-lite-demo-1","method":"get","upload":false,"swaggerDoc":"","x":80,"y":60,"wires":[["ed71acab.f919f"]]},{"id":"ed71acab.f919f","type":"template","z":"2fb21a6b.366766","name":"Set Device Leader to 1","field":"payload.script.deviceLeader","fieldType":"msg","format":"javascript","syntax":"mustache","template":"'archiver/blinky-lite/demo/breadboard/green/'","output":"str","x":260,"y":60,"wires":[["50a5098c.bba368"]]},{"id":"50a5098c.bba368","type":"template","z":"2fb21a6b.366766","name":"Title 1","field":"payload.title","fieldType":"msg","format":"html","syntax":"mustache","template":"Blinky-Lite Demo Green Gizmo","output":"str","x":430,"y":60,"wires":[["4346720b.c0671c"]]},{"id":"8bf91f6f.6883b","type":"websocket out","z":"2fb21a6b.366766","name":"Socket Out","server":"f162f8da.5ea6d8","client":"","x":530,"y":800,"wires":[]},{"id":"6586934.0f4296c","type":"websocket in","z":"2fb21a6b.366766","name":"","server":"f162f8da.5ea6d8","client":"","x":180,"y":1000,"wires":[["70f99f78.b53f2"]]},{"id":"50e0043f.cf2c2c","type":"template","z":"2fb21a6b.366766","name":"Dashboard HTML","field":"payload.html.dashboard","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Dashboard</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'>\n                            <div class='col-md-8' align='center'>\n                                <div class='row'>\n                                    <div class='col-md-12' align='center' style='padding-bottom: 20px;'>\n                                        <div id=\"distGaugePlot\" width=\"100%\" ></div>\n                                    </div>\n                                </div>\n                                <div class='row'>\n                                    <div class='col-md-12' align='center'>\n                                        <div id=\"photoGaugePlot\" width=\"100%\" ></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class='col-md-4' align='center'>\n                                <div id=\"tempAvgBarPlot\" width=\"100%\" ></div>\n                            </div>\n                        </div>\n                        <div class='row'>\n                            <div class='col-md-12' align='center'>\n                                <div id=\"stripChartPlot\" width=\"100%\" height=\"300px\"></div>\n                            </div>\n                       </div>\n                    </div>\n                </div>\n","output":"str","x":510,"y":260,"wires":[["54a877e7.b8ac08"]]},{"id":"54a877e7.b8ac08","type":"template","z":"2fb21a6b.366766","name":"Control HTML","field":"payload.html.control","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Control HTML -->\n                <div class='card'>\n                    <p class='card-title'>Control</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' >\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-title'>Blink Mode</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block' onclick=\"setBlinkMode(-1)\">&#9660</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='tableText' id='blinkMode' >Off</span>\n                                    </td>\n                                    <td width='10%'>\n                                        <button class='btn card-button btn-block' onclick=\"setBlinkMode(1)\">&#9650</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='card-title'>Led Brightness (%)</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='card-title' id='ledBrightness'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"ledBrightnessSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row' style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='75%'>\n                                        <span class='card-title'>Led Period (100-2000mS)</span>\n                                    </td>\n                                    <td width='25%'  align='right'>\n                                        <span class='card-title' id='ledPeriod'>0</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='10%'></td>\n                                    <td width='80%' align='center'><div id=\"ledPeriodSlider\"></div></td>\n                                    <td width='10%'></td>\n                                </tr>\n                            </table>\n                        </div>\n                        <div class='row'  style='padding-top: 35px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%'>\n                                        <span class='card-title' id='distanceAlarmLabel'>Distance Alarm</span>\n                                    </td>\n                                    <td width='20%'>\n                                        <input id=\"distanceAlarm\" type=\"text\" value=\"0\" class=\"form-control\" oninput=\"distanceAlarmChange()\"/>\n                                    </td>\n                                    <td width='20%'>\n                                        <button class='btn card-button btn-block' id=\"distanceAlarmButton\" onclick=\"distanceAlarm()\" disabled>&#10004</button>\n                                    </td>\n                                </tr>\n                            </table>\n                       </div>\n                    </div>\n                </div>\n","output":"str","x":500,"y":300,"wires":[["90c9edd5.abea4"]]},{"id":"90c9edd5.abea4","type":"template","z":"2fb21a6b.366766","name":"History HTML","field":"payload.html.history","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"tempPhotoStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n","output":"str","x":500,"y":340,"wires":[["dfcdea8e.1b6118"]]},{"id":"832b6072.bcdf3","type":"template","z":"2fb21a6b.366766","name":"Global Javascript","field":"payload.script.global","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Global Javascript\n        var ws;\n        var retries = 0;\n        var userID = -1;\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Photo (%)',\n            trace2Color : '#f2a321',\n            trace2GridColor : '#f8d8a0',\n            plotLength  : 600,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'tempPhotoStripChart'\n        };\n        var ledBrightnessSliderMoved = false;\n        var ledPeriodSliderMoved = false;\n        var distanceAlarmChanged = false;\n        var distanceAlarmMin = 0;\n        var distanceAlarmMax = 0;\n\n        let tempPhotoStripChart = new StripChart(plotConfig);\n","output":"str","x":170,"y":260,"wires":[["f01965a5.c5fb08"]]},{"id":"f01965a5.c5fb08","type":"template","z":"2fb21a6b.366766","name":"Doc Ready Javascript","field":"payload.script.docReady","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Doc Ready Javascript\n        $( document ).ready(function()\n        {\n            userID  = Math.floor(Math.random() * 4096);\n            wsConnectC();\n            $( function() \n            {\n                $( \"#ledBrightnessSlider\" ).slider(\n                    {\n                        stop    :   function( event, ui ) \n                                    {\n                                        $('#ledBrightness').hide();\n                                        var ledValue = Math.round(2.55 * ui.value);\n                                        ws.send(JSON.stringify(\n                                            {\n                                                topic       : 'sendSettingToMqtt',\n                                                mqttMessage :\n                                                {\n                                                    topic   : {{{payload.script.deviceLeader}}} + 'led/value/setting',\n                                                    payload :  {type : 'scalar',value : ledValue} \n                                                }\n                                                \n                                            }));\n                                        setTimeout(function()\n                                        {\n                                            ledBrightnessSliderMoved = false; \n                                            $('#ledBrightness').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){ledBrightnessSliderMoved = true},\n                    });\n            } );\n            $(\"#ledBrightnessSlider\").children(\"div\").css(\"background\",\"red\");\n            $( function() \n            {\n                $( \"#ledPeriodSlider\" ).slider(\n                    {\n                        stop    :   function( event, ui ) \n                                    {\n                                        $('#ledPeriod').hide();\n                                        var ledPeriod = Math.round(19 *  ui.value + 100);\n                                        ws.send(JSON.stringify(\n                                            {\n                                                topic       : 'sendSettingToMqtt',\n                                                mqttMessage :\n                                                {\n                                                    topic   : {{{payload.script.deviceLeader}}} + 'led/period/setting',\n                                                    payload :  {type : 'scalar',value : ledPeriod} \n                                                }\n                                                \n                                            }));\n                                        setTimeout(function()\n                                        { \n                                            ledPeriodSliderMoved = false; \n                                            $('#ledPeriod').show();\n                                        }, 1500);\n                                        \n                                    },\n                        start   :   function( event, ui ){ledPeriodSliderMoved = true;},\n                    });\n            } );\n         });\n","output":"str","x":180,"y":300,"wires":[["218c1ec1.90ca92"]]},{"id":"218c1ec1.90ca92","type":"template","z":"2fb21a6b.366766","name":"Socket Connect JavaScript","field":"payload.script.socket","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Socket Connect JavaScript\n        function wsConnectC()\n        {\n            var uri = window.location.href.split('://');\n            var wslead = 'ws://';\n            if (uri[0] == 'https') wslead = 'wss://';\n            ws = new WebSocket(wslead + uri[1] + '/websocket');\n            ws.onmessage = function(event)\n            {\n                var msg = JSON.parse(event.data);\n                switch(msg.topic)\n                {\n                    case 'readings':\n                        updateDmaReadings(msg.payload);\n                        break;\n                    default:\n                    // code block\n                }\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket disconnected\");\n            };\n        }\n","output":"str","x":200,"y":340,"wires":[["1662b5b5.1c565a"]]},{"id":"1662b5b5.1c565a","type":"template","z":"2fb21a6b.366766","name":"Update Readings Javascript","field":"payload.script.updateReadings","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Update Readings Javascript\n        function updateDmaReadings(data)\n        {\n            var distGaugeConfig = \n                {\n                    lolo            : data.ultraDistance.lolo, \n                    low             : data.ultraDistance.low, \n                    high            : data.ultraDistance.high, \n                    hihi            : data.ultraDistance.hihi, \n                    value           : data.ultraDistance.value, \n                    unit            : data.ultraDistance.unit, \n                    label           : 'Distance', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#ffff00',\n                    highColor       : '#00ff00', \n                    backgroundColor : '#557a95', \n                    labelColor      : '#000000', \n                    size            : 300, \n                    htmlId          : 'distGaugePlot'\n                };\n            setGaugeWidget(distGaugeConfig);\n            var photoGaugeConfig = \n                {\n                    lolo            : data.photoDetValue.lolo, \n                    low             : data.photoDetValue.low, \n                    high            : data.photoDetValue.high, \n                    hihi            : data.photoDetValue.hihi, \n                    value           : data.photoDetValue.value, \n                    unit            : data.photoDetValue.unit, \n                    label           : 'Photo', \n                    lowColor        : '#ff0000', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ffff00', \n                    backgroundColor : '#557a95', \n                    labelColor      : '#000000', \n                    size            : 300, \n                    htmlId          : 'photoGaugePlot'\n                };\n            setGaugeWidget(photoGaugeConfig);\n            var tempAvgBarConfig = \n                {\n                    lolo            : data.tempAvg.lolo, \n                    low             : data.tempAvg.low, \n                    high            : data.tempAvg.high, \n                    hihi            : data.tempAvg.hihi, \n                    value           : data.tempAvg.value, \n                    unit            : data.tempAvg.unit, \n                    label           : 'tempAvg', \n                    lowColor        : '#ffff00', \n                    mediumColor     : '#00ff00',\n                    highColor       : '#ff0000', \n                    backgroundColor : '#557a95', \n                    labelColor      : '#ffffff', \n                    height          : 360, \n                    width           : 100, \n                    htmlId          : 'tempAvgBarPlot'\n                };\n            setBarWidget(tempAvgBarConfig);\n            tempPhotoStripChart.addTracePoints(data.tempAvg.value, data.photoDetValue.value);\n            \n            var blinkMode = 'Off';\n            if (data.ledState.value == 1) blinkMode = 'Blink';\n            if (data.ledState.value == 2) blinkMode = 'On';\n            $('#blinkMode').html(blinkMode);\n            \n            if (!ledBrightnessSliderMoved)\n            {   \n                var ledBrightness = Math.round(100.0 * data.ledValue.value / 255);\n                $('#ledBrightness').html(ledBrightness);\n                $('#ledBrightnessSlider' ).slider( \"value\", ledBrightness );\n            }\n\n            if (!ledPeriodSliderMoved)\n            {   \n                $('#ledPeriod').html(data.ledPeriod.value);\n                $('#ledPeriodSlider' ).slider( \"value\", Math.round((data.ledPeriod.value - 100.0) / 19.0) );\n            }\n            $('#distanceAlarmLabel').html('Distance Alarm (' + data.ultraDistance.lolo.toString() + '-' + data.ultraDistance.high.toString() + ' cm)');\n            distanceAlarmMin = data.ultraDistance.lolo;\n            distanceAlarmMax = data.ultraDistance.high;\n            if (data.ultraAlarmDistance.value != data.ultraDistance.low)\n            {\n                changeDataBaseKeyValue(data.ultraDistance, 'low', data.ultraAlarmDistance.value);\n            }\n\n            if (!distanceAlarmChanged)\n            {\n                $('#distanceAlarm').val(data.ultraAlarmDistance.value);\n            }\n        }\n","output":"str","x":200,"y":380,"wires":[["8b3220a9.53279"]]},{"id":"8b3220a9.53279","type":"template","z":"2fb21a6b.366766","name":"Distance Alarm JavaScript","field":"payload.script.distanceAlarm","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Distance Alarm JavaScript\n        function distanceAlarmChange()\n        {\n            distanceAlarmChanged = true;\n            $('#distanceAlarmButton').prop('disabled', false);\n\n        }\n        function distanceAlarm()\n        {\n            $('#distanceAlarmButton').prop('disabled', true);\n            if (isNaN($('#distanceAlarm').val()))\n            {\n                distanceAlarmChanged = false;\n                return;\n            }\n            var distanceAlarm = Number($('#distanceAlarm').val());\n            if ( (distanceAlarmMin <= distanceAlarm) && (distanceAlarm <= distanceAlarmMax) )\n            {\n                ws.send(JSON.stringify(\n                    {\n                        topic   : 'sendSettingToMqtt',\n                        mqttMessage :\n                        {\n                            topic       : {{{payload.script.deviceLeader}}} + 'ultraDistance/alarm/setting',\n                            payload     : {type : 'scalar', value : distanceAlarm}\n                        }\n                        \n                    }));\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Distance alarm entry outside range! (' + distanceAlarmMin.toString() + '-' + distanceAlarmMax.toString() + ' cm)');\n            }\n            distanceAlarmChanged = false;\n        }\n","output":"str","x":200,"y":420,"wires":[["9fb81263.fd54c"]]},{"id":"eb710b34.7d4128","type":"template","z":"2fb21a6b.366766","name":"Change Database Key Value","field":"payload.script.changeDatabaseKeyValue","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Change Database Key Value\n        function changeDataBaseKeyValue(databaseRecord, key, keyValue)\n        {\n            var newMsg = \n            {\n                topic           :   'changeDataBaseProperty',\n                query         : \n                {\n                    sys01   : databaseRecord.sys01,\n                    sys02   : databaseRecord.sys02,\n                    sys03   : databaseRecord.sys03,\n                    sys04   : databaseRecord.sys04,\n                    device  : databaseRecord.device,\n                    attr    : databaseRecord.attr,\n                    prop    : databaseRecord.prop,\n                },\n                payload     :\n                {\n                    '$set'  :\n                    { \n                        [key] : keyValue\n                    }\n                }\n            };\n            ws.send(JSON.stringify(newMsg));\n        }\n","output":"str","x":660,"y":180,"wires":[["832b6072.bcdf3"]]},{"id":"9fb81263.fd54c","type":"template","z":"2fb21a6b.366766","name":"Set Blink Mode JavaScript","field":"payload.script.setBlinkMode","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Set Blink Mode JavaScript\n        function setBlinkMode(up)\n        {\n            var blinkModeText = $('#blinkMode').text();\n            var blinkMode = 0;\n            if (blinkModeText == 'Blink')  blinkMode = 1;\n            if (blinkModeText == 'On')  blinkMode = 2;\n            blinkMode = blinkMode + up;\n            if (blinkMode > 2) blinkMode = 0;\n            if (blinkMode < 0) blinkMode = 2;\n            ws.send(JSON.stringify(\n                {\n                    topic       : 'sendSettingToMqtt',\n                    mqttMessage :\n                    {\n                        topic   : {{{payload.script.deviceLeader}}} + 'led/state/setting',\n                        payload :  {type : 'scalar',value : blinkMode}\n                    }\n                    \n                }));\n        }\n","output":"str","x":190,"y":460,"wires":[["9a1fbe36.09896"]]},{"id":"8d3bc04e.e9f2","type":"http in","z":"bd9a93d5.70311","name":"HTTP GET","url":"/","method":"get","upload":false,"swaggerDoc":"","x":80,"y":60,"wires":[["c7ba55d2.66a0d8"]]},{"id":"78ac69c4.a23c98","type":"template","z":"bd9a93d5.70311","name":"Body","field":"payload.body","fieldType":"msg","format":"html","syntax":"mustache","template":"<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/blinky-lite-demo-1\" target=\"_blank\">Gizmo 1</a>\n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/blinky-lite-demo-2\" target=\"_blank\">Gizmo 2</a>\n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n        <div class='row' style='padding-top:10px; padding-bottom:10px;'>\n            <div class='col-md-3' align='center'></div>\n            <div class='col-md-6' align='center' >\n                <a class=\"btn jumbotron-button btn-block\" width='80%' href=\"/\" target=\"_blank\" id=\"blinky-lite-core\">Blinky-Lite Core</a> \n            </div>\n            <div class='col-md-3' align='center'></div>\n        </div>\n    </div>","output":"str","x":910,"y":60,"wires":[["6da7c04f.a32a9"]]},{"id":"72abec.ca7eb414","type":"template","z":"bd9a93d5.70311","name":"Document Ready JavaScript","field":"payload.javascript","fieldType":"msg","format":"javascript","syntax":"mustache","template":"// Document Ready JavaScript\n        $( document ).ready(function()\n        {\n            var uri = window.location.href;\n            var loc = uri.indexOf('{{{payload.env.appport}}}');\n            console.log(uri);\n            if (loc >= 0)\n            {\n                $('#blinky-lite-core').attr(\"href\", uri.replace('{{{payload.env.appport}}}','{{{payload.env.coreport}}}'));\n            }\n            else\n            {\n                var newUri = uri.substring(0,uri.length - 1) + ':{{{payload.env.coreport}}}/';\n                console.log(newUri);\n                $('#blinky-lite-core').attr(\"href\", newUri);\n            }\n        });","output":"str","x":600,"y":60,"wires":[["ea777725.689b48"]]},{"id":"ea777725.689b48","type":"template","z":"bd9a93d5.70311","name":"Title","field":"payload.title","fieldType":"msg","format":"html","syntax":"mustache","template":"Blinky-Lite Demo","output":"str","x":790,"y":60,"wires":[["78ac69c4.a23c98"]]},{"id":"6da7c04f.a32a9","type":"subflow:e8763d21.b7461","z":"bd9a93d5.70311","name":"","x":1030,"y":60,"wires":[]},{"id":"ca489a7c.d08328","type":"inject","z":"bd9a93d5.70311","name":"APPPORT env","topic":"APPPORT","payload":"APPPORT","payloadType":"env","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":120,"y":140,"wires":[["c7ba55d2.66a0d8"]]},{"id":"c7ba55d2.66a0d8","type":"function","z":"bd9a93d5.70311","name":"Store env Variables","func":"if (msg.topic == 'APPPORT')\n{\n    context.set(msg.topic, msg.payload);\n    return null;\n}\nif (msg.topic == 'COREPORT')\n{\n    context.set(msg.topic, msg.payload);\n    return null;\n}\nmsg.payload.env = \n{\n   appport  :  context.get('APPPORT'),\n   coreport :  context.get('COREPORT'), \n}\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":60,"wires":[["72abec.ca7eb414"]]},{"id":"fb37d397.a2111","type":"inject","z":"bd9a93d5.70311","name":"COREPORT env","topic":"COREPORT","payload":"COREPORT","payloadType":"env","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":180,"wires":[["c7ba55d2.66a0d8"]]}]